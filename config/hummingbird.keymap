/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace

&lt {
    quick-tap-ms = <200>;
    flavor = "hold-preferred";
};

&mt {
    quick-tap-ms = <200>;
    flavor = "balanced";
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LGUI Q    &kp W  &kp E  &kp R      &kp T              &kp Y      &kp U       &kp I  &kp O  &mt RALT P
&mt LSHIFT A  &kp S  &kp D  &kp F      &kp G              &kp H      &kp J       &kp K  &kp L  &mt RSHFT Z
              &kp X  &kp C  &kp V                                    &kp B       &kp N  &kp M
                            &lt 1 TAB  &mt LCTRL ENTER    &kp SPACE  &lt 2 BSPC
            >;
        };

        sym_layer {
            bindings = <
&kp LALT   &kp N1  &kp N2  &kp N3  &none     &none       &kp LBKT   &kp RBKT   &kp BSLH  &mt RGUI GRAVE
&kp LSHFT  &kp N4  &kp N5  &kp N6  &kp N0    &kp PLUS    &kp MINUS  &kp EQUAL  &kp SEMI  &mt RSHFT APOS
           &kp N7  &kp N8  &kp N9                        &kp COMMA  &kp DOT    &kp FSLH
                           &trans  &trans    &caps_word  &lt 3 DEL
            >;
        };

        fn_layer {
            bindings = <
&mt LALT F1   &kp F2   &kp F3   &kp F4     &kp F5     &kp HOME   &kp PG_DN     &kp PG_UP     &kp END     &kp RGUI
&mt LSHFT F6  &kp F7   &kp F8   &kp F9     &kp F10    &kp LEFT   &kp DOWN      &kp UP        &kp RIGHT   &mt RSHIFT DEL
              &kp F11  &kp F12  &kp PSCRN                        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE
                                &lt 3 ESC  &trans     &kp RCTRL  &trans
            >;
        };

        adjust_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &out OUT_TOG
&trans  &trans  &trans  &trans  &trans    &trans      &trans        &trans        &trans        &trans
        &trans  &trans  &trans                        &trans        &trans        &trans
                        &trans  &trans    &trans      &trans
            >;
        };
    };
};
